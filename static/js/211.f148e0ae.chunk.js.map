{"version":3,"file":"static/js/211.f148e0ae.chunk.js","mappings":"kNAGMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kNAML,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAM5BC,EAAOL,EAAAA,GAAAA,KAAH,wIAKG,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,Y,UCTlC,EATqB,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACzB,OACI,iCACI,SAACH,EAAD,kBACA,SAACN,EAAD,CAAcU,GAAIF,EAAlB,SAAyBC,S,6JCJ/BE,EAAYV,EAAAA,GAAAA,MAAH,8GAGF,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,YAG5BK,EAAYX,EAAAA,GAAAA,MAAH,yNAOS,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAIvCQ,EAAYZ,EAAAA,GAAAA,OAAH,8bASK,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YACjB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,YAWvCS,EAAeb,EAAAA,GAAAA,IAAH,0J,mBChClB,IARc,CACVI,SAAU,UACVU,IAAK,UACLC,MAAO,UACPT,SAAU,UACVU,UAAW,Y,2NCFTC,EAAcjB,EAAAA,GAAAA,IAAH,qEAIXkB,EAAYlB,EAAAA,GAAAA,GAAH,gKACD,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAO7Be,EAAkBnB,EAAAA,GAAAA,GAAH,qIACX,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAMzBgB,GAAWpB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qdAaU,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAUvCiB,EAAcrB,EAAAA,GAAAA,IAAH,qGAMXK,EAAOL,EAAAA,GAAAA,EAAH,wIACG,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,a,4GClDrBkB,EAA4BC,EAAAA,GAAW,CACnDC,MAAOD,EAAAA,KACHE,QAAQ,mCAAoC,8FAC5CC,SAAS,cACZC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,8BACPF,SAAS,gB,0FCqEd,EAlEkB,WAEhB,OAAgBG,EAAAA,EAAAA,MAATC,GAAP,eAQE,OACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAe3B,MAAOA,EAAAA,EAAtB,WACI,SAAC,KAAD,sBACA,SAAC,KAAD,WACA,SAAC,cAAD,CAAsB4B,MAAO,CAAEC,MAAO,UAAWC,KAAM,QAAvD,UACI,SAAC,MAAD,SAGb,SAAC,KAAD,CACDC,cAAe,CAAEV,MAAO,GAAIG,SAAU,IACtCQ,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GAAT,OAlBO,SAACD,EAAD,GAA0B,IAAhBE,EAAe,EAAfA,UAE3BT,EAAMO,GACNE,IAe+BC,CAAaH,EAAQC,IAHnD,SAKA,SAAAG,GAAM,OAEL,kBAAML,SAAUK,EAAOD,aAAvB,WAEE,UAAC,KAAD,CAAWE,QAAQ,QAAnB,mBAEI,SAAC,MAAD,QACEC,GAAG,QACHC,KAAK,QACLC,KAAK,SACDJ,EAAOK,cAAc,WAE5BL,EAAOM,QAAQvB,OAASiB,EAAOO,OAAOxB,OACtC,SAAC,KAAD,UAAeiB,EAAOO,OAAOxB,QAC3B,SAGS,UAAC,KAAD,CAAWkB,QAAQ,WAAnB,sBAEV,SAAC,MAAD,QACEC,GAAG,WACHC,KAAK,WACLC,KAAK,YACDJ,EAAOK,cAAc,cAE5BL,EAAOM,QAAQpB,UAAYc,EAAOO,OAAOrB,UACzC,SAAC,KAAD,UAAec,EAAOO,OAAOrB,WAC3B,SAGa,SAAC,KAAD,CAAWkB,KAAK,SAAhB,2BAMjB,SAACI,EAAA,EAAD,CAAc1C,KAAK,YAAYC,KAAK","sources":["components/AuthRedirect/AuthRedirect.styled.jsx","components/AuthRedirect/AuthRedirect.jsx","components/ContactForm/ContactForm.styled.jsx","constants/theme.jsx","pages/HomePage/HomePage.styled.jsx","constants/userLoginValidationSchema.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst RedirectLink = styled(Link)`\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    width: fit-content;\n    text-decoration: none;\n    color: ${props => props.theme.darkBlue};\n\n    :hover {text-decoration: underline;}\n\n`\n\nconst Text = styled.span`\n    display: block;\n    text-align: center;\n     margin-top: 30px;\n    margin-bottom: 8px;\n    color: ${props => props.theme.darkGrey};\n`\nexport { Text, RedirectLink };","import { RedirectLink, Text } from \"./AuthRedirect.styled\"\n\nconst AuthRedirect = ({page, text}) => {\n    return (\n        <>\n            <Text>or</Text>\n            <RedirectLink to={page}>{text}</RedirectLink>\n        </>\n    )\n};\n\nexport default AuthRedirect;","import styled from 'styled-components';\n\nconst FormLabel = styled.label`\n    display: block;\n    text-align: center;\n    color: ${props => props.theme.darkGrey};\n    font-weight: 600;\n`\nconst FormInput = styled.input`\n    display: block;\n    width: 340px;\n    height: 24px;\n     margin-bottom: 24px;\n     margin-top: 8px;\n     padding-left: 8px;\n    border: 1px solid ${props => props.theme.darkBlue};\n    border-radius: 5px;\n    \n`\nconst SubmitBtn = styled.button`\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    width: 148px;\n    height: 40px;\n    border-style: solid;\n    border-radius: 5px;\n    border-width: 2px;\n    border-color: ${props => props.theme.darkBlue};\n    background-color: ${props => props.theme.darkBlue};\n    color: white;\n    font-size: 16px;\n    cursor: pointer;\n    transition-property: transform;\n  transition-duration: 500ms;\n\n    &:hover {\n       transform: scale(1.08);\n    }\n`\nconst ErrorMessage = styled.div`\n   margin-bottom: 12px;\n    font-weight: 400;\n    font-size: 12px;\n    width: 340px;\n    color: red;\n    text-align: left;\n`\n\nexport { FormLabel, FormInput, SubmitBtn, ErrorMessage };","const theme = {\n    darkBlue: '#0c005a',\n    red: '#bc2525',\n    green: '#00420b',\n    darkGrey: '#323643',\n    lightGray: '#787675'\n}\n\nexport default theme;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst PageWrapper = styled.div`\n    width: 340px;\n    height: fit-content;\n`\nconst PageTitle = styled.h1`\n     color: ${props => props.theme.darkBlue};\n    margin-top: 0px;\n    margin-bottom: 30px;\n    font-size: 40px;\n    font-weight: 700;\n    text-align: center;\n`\nconst InvitationTitle = styled.h2`\ncolor:  ${props => props.theme.darkBlue};\n    margin-top: 0px;\n    margin-bottom: 30px;\n    font-size: 20px;\n    text-align: center;\n`\nconst AuthLink = styled(Link)`\n    display: block;\n    padding: 10px 15px;\n    margin-right: auto;\n    margin-left: auto;\n    :not(:last-child) {\n   margin-bottom: 60px\n\n    }\n    text-align: center;\n    text-decoration: none;\n    width: 148px;\n    border-radius: 5px;\n    background-color: ${props => props.theme.darkBlue};\n    color: white;\n    font-size: 16px;\n    transition-property: transform;\n    transition-duration: 500ms;\n\n    &:hover {\n       transform: scale(1.08);\n    }\n`\nconst IconWrapper = styled.div`\n   justify-content: center;\n    display: flex;\n    margin-bottom: 20px;\n\n`\nconst Text = styled.p`\n    color: ${props => props.theme.darkBlue};\n    font-size: 18px;\n    text-align: center;\n    margin-top: 0px;\n    margin-bottom: 10px;\n`\nexport { PageWrapper, InvitationTitle, PageTitle, AuthLink, IconWrapper, Text };","import * as Yup from 'yup';\n\nexport const userLoginValidationSchema = Yup.object({\n email: Yup.string()\n    .matches(/^[\\w-|.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, '* Email must contain \"@\" and \".\" characters and may contain \"-\" and \".\"characters before @')\n    .required('* Required'),\n  password: Yup.string()\n    .min(8, '* Minimum eight characters')\n    .required('* Required'),\n});","import { Formik } from 'formik';\nimport { userLoginValidationSchema } from 'constants/userLoginValidationSchema';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '../../constants/theme';\nimport { FaUserCheck } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\nimport { FormLabel, FormInput, SubmitBtn, ErrorMessage } from '../../components/ContactForm/ContactForm.styled';\nimport { PageWrapper, PageTitle, IconWrapper } from 'pages/HomePage/HomePage.styled';\nimport { useLogInMutation } from 'redux/AuthOperations/AuthOperations';\nimport AuthRedirect from 'components/AuthRedirect';\n\nconst LoginPage = () => {\n\n  const [logIn] = useLogInMutation();\n  \n  const handleSubmit = (values, {resetForm}) => {\n      \n      logIn(values);\n      resetForm();\n}\n\n    return (\n        <PageWrapper>\n            <ThemeProvider theme={theme}>\n                <PageTitle>Log in</PageTitle>\n                <IconWrapper>\n                <IconContext.Provider value={{ color: '#0c005a', size: \"30px\" }}>\n                    <FaUserCheck />\n                    </IconContext.Provider>\n                    </IconWrapper>\n       <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={userLoginValidationSchema}\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n    >\n      {formik => (\n                   \n        <form onSubmit={formik.handleSubmit}>\n\n          <FormLabel htmlFor=\"email\">\n            Email\n              <FormInput\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                {...formik.getFieldProps('email')}\n            />\n            {formik.touched.email && formik.errors.email ? (\n             <ErrorMessage>{formik.errors.email}</ErrorMessage>\n           ) : null}\n                        </FormLabel>\n                        \n                        <FormLabel htmlFor=\"password\">\n            Password\n              <FormInput\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                {...formik.getFieldProps('password')}\n            />\n            {formik.touched.password && formik.errors.password ? (\n             <ErrorMessage>{formik.errors.password}</ErrorMessage>\n           ) : null}\n          </FormLabel>\n\n                            <SubmitBtn type=\"submit\">Log in</SubmitBtn>\n \n                    </form>    \n      )\n      }\n          </Formik>\n           <AuthRedirect page='/register' text='Register'/>\n                </ThemeProvider>\n</PageWrapper>\n    )\n};\n\nexport default LoginPage;"],"names":["RedirectLink","styled","Link","props","theme","darkBlue","Text","darkGrey","page","text","to","FormLabel","FormInput","SubmitBtn","ErrorMessage","red","green","lightGray","PageWrapper","PageTitle","InvitationTitle","AuthLink","IconWrapper","userLoginValidationSchema","Yup","email","matches","required","password","min","useLogInMutation","logIn","value","color","size","initialValues","validationSchema","onSubmit","values","actions","resetForm","handleSubmit","formik","htmlFor","id","name","type","getFieldProps","touched","errors","AuthRedirect"],"sourceRoot":""}